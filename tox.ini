[tox]
isolated_build = True
envlist = py310, py311, py312

[testenv]
description = Runs test suite parallelized in the specified python environment and
              against number of available processes (up to 4).
              Run `tox -e py310 -- -n 0` to run tests in a python 3.10 with
              parallelization disabled.
passenv = *
deps =
    pip
    pytest-xdist
extras = test
         yolo-models
         numpy
         torch
         torchvision
         torchmetrics
commands = pytest {posargs: tests src -n 0 --maxprocesses=4 --durations=0}

[testenv:min-deps]
description = Runs test suite against minimum supported versions of dependencies.
deps =
    typing-extensions==4.1.0
    {[testenv]deps}
extras = test
         torchmetrics
         yolo-models
         torchmetrics
basepython = python3.10

[testenv:coverage]
description = Runs test suite and measures test-coverage. Fails if coverage is
              below 90 percent. Run `tox -e coverage -- -n 0` to disable parallelization.
deps =
    {[testenv]deps}
    coverage[toml]
    pytest-cov
extras =
    test
    torchmetrics
    yolo-models
usedevelop = true
basepython = python3.10
setenv = NUMBA_DISABLE_JIT=1
commands = pytest --cov-report term-missing --cov-config=pyproject.toml --cov-fail-under=90 --cov=maite  tests {posargs: -n 0 --maxprocesses=4}

[testenv:scan-docs]
description = Validate that the MAITE public API has docstrings that adhere
              to the numpydoc standard, and that their example sections "scan clean"
              under pyright.
deps =
    --requirement deps/requirements-pyright.txt
extras =
    test
    torchmetrics
    yolo-models
commands = pytest tests/test_docstrings.py {posargs: -n 0 --maxprocesses=4}

[testenv:typecheck]
description = Ensure that the MAITE source code and test suite scan clean
              under pyright, and that the MAITE public API has a 100 percent
              type-completeness score.
usedevelop = true
basepython = python3.10
extras =
    test
    torchmetrics
    yolo-models
    torchmetrics
commands =
    pyright src/ tests/
    pyright --ignoreexternal --verifytypes maite

[testenv:enforce-format]
description = Checks that MAITE source materials (code & docs) and test suite
              adhere to formatting and code-quality standards.
skip_install=true
basepython=python3.10
deps=
    ruff==0.12.4
    codespell[toml]
commands=
    ruff check
    ruff format --check
    codespell src/ docs/


[testenv:auto-format]
description = Format MAITE source materials (code & docs) and test suite
              adhere to formatting and code-quality standards.. Running
              this can help fix a failing `enforce-format` run.
skip_install=true
deps =
    ruff==0.12.4
commands =
    ruff check --fix
    ruff format

[testenv:docs]
description = Uses Sphinx to generate html for the MAITE docs. Stores the
              results in `.tox/docs/build/html/`.
basepython=python3.10
changedir=docs
deps=-r{toxinidir}/docs/requirements.txt
extras =
    builddocs
    yolo-models
    torchmetrics
allowlist_externals=/usr/bin/make
commands=
    make BUILDDIR={envdir}/build

