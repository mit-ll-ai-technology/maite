[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"


[project]
name = "maite"
dynamic = ["version"]
description = "Library of common types, protocols (a.k.a. structural subtypes), and utilities to support AI test and evaluation"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
  "typing-extensions >= 4.5, != 4.6",
  "numpy >= 1.24.2",
]

license = { file = "LICENSE.txt" }
keywords = ["machine learning", "testing", "pytest"]

authors = [{name = "MIT Lincoln Laboratory"}]

classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Programming Language :: Python :: 3 :: Only",
]

[project.optional-dependencies]

# dependencies required to run maite unit tests
test = [
  "pip",
  "jupytext >= 1.14.0",
  "numpydoc >= 1.5.0",
  "pyright >= 1.1.280, != 1.1.401",  #1.1.401 breaks current CI
  "pytest >= 7.0.0",
  "hypothesis >= 6.61.0, <= 6.113",
  "pytest-mock >= 3.10.0",
  "torch >=1.7, != 1.12.0"
]

# dependencies required to build all documentation with sphinx
# (This is required because all classes/functions documented with `autodoc`
# and `autosummary` must be importable)
builddocs = [
  "torch>=1.7,!=1.12.0",
  "pytest >= 7.0.0",
  "jupyter",
  "nbconvert",
  "kornia",
  "matplotlib",
  "torchmetrics[detection]",
  "torchvision",
  "pycocotools",
  "datasets>=3",
  "transformers",
  "ultralytics",
  "watermark",
  "tox (>=4.24.2,<5.0.0)"
]

# dependencies required to contribute to maite as a developer
# (in addition to those listed in 'test' and 'builddocs' extras)
dev = [
  "tox",
  "pre-commit"
]

# dependencies required to use YOLO model wrappers
yolo-models = [
  "boto3 (>=1.35)",
  "botocore (>=1.35)",
  "roboflow (>=1.1.30)",
  "matplotlib (>=3.7.1)",
  "pandas (>=2.0)",
  "opencv-python-headless (>=4.6.0)",
  "torch (>=2.2.0)",
  "ultralytics (>=8.2.78)",
  "yolov5 (>=7.0.13)"
]

# dependencies required to use TorchMetrics metric wrappers
torchmetrics = ["torchmetrics[detection] (>=1.7.0,<2.0.0)"]

[project.urls]
"Homepage" = "https://github.com/mit-ll-ai-technology/maite"
"Bug Reports" = "https://github.com/mit-ll-ai-technology/maite/issues"
"Source" = "https://github.com/mit-ll-ai-technology/maite"


[tool.poetry]
include = [
  { path = "tests", format = "sdist" },
  { path = "maite"}
]
version = "0.0.0"  # this is dynamically reset during poetry build

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = { version = ">=1.0.0,<2.0.0", extras = ["plugin"] }

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"

[tool.poetry-dynamic-versioning.substitution]
folders = [
    { path = "src/maite", files = ["_version.py"] }
]


[tool.isort]
known_first_party = ["maite", "tests"]
profile = "black"
combine_as_imports = true

[tool.codespell]
skip = '*.svg'

[tool.coverage.report]
exclude_lines = [
  'pragma: no cover',
  'def __repr__',
  'raise AssertionError',
  'raise NotImplementedError',
  'class .*\bProtocol(\[.+\])?\):',
  '@(abc\.)?abstractmethod',
  '@(typing\.)?overload',
  'except ImportError',
  'except ModuleNotFoundError',
  'if (typing\.)?TYPE_CHECKING:',

]

[tool.pytest.ini_options]
xfail_strict = true
addopts = [
    "--import-mode=importlib",  # Using an "importlib" import-mode that permits duplicate module names in different tested directories to avoid collisions (between "validation.py" files, for example). See https://docs.pytest.org/en/stable/explanation/pythonpath.html#import-modes
    "--ignore-glob=tests/dummy_projects/*",
    "--ignore=src/maite/_internals/interop/provider_registry.py",  # Contains docstring examples with side effects that affect other examples
    "--doctest-modules",
    "--doctest-report=udiff",
    "--doctest-continue-on-failure"
]

[tool.pyright]
include = ["src"]
exclude = [
  "**/node_modules",
  "**/__pycache__",
  "src/maite/_version.py",
  "tests/conftest.py",
  "tests/test_testing/test_type_checking.py",
  "tests/test_testing/test_project.py",
  "tests/test_protocols.py",
  "tests/dummy_projects",
  "src/maite/_internals/interop/provider_registry.py",  # providers not exposed externally yet
  "src/maite/_internals/protocols/providers.py"  # providers not exposed externally yet
]
reportUnnecessaryTypeIgnoreComment = true
reportUnnecessaryIsInstance = false
